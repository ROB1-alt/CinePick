[{"/Users/robin/Desktop/cinepick-movie-selector/src/index.js":"1","/Users/robin/Desktop/cinepick-movie-selector/src/App.js":"2","/Users/robin/Desktop/cinepick-movie-selector/src/reportWebVitals.js":"3","/Users/robin/Desktop/cinepick-movie-selector/src/pages/home.js":"4","/Users/robin/Desktop/cinepick-movie-selector/src/pages/movie.js":"5","/Users/robin/Desktop/cinepick-movie-selector/src/components/Footer.js":"6"},{"size":500,"mtime":1616427868981,"results":"7","hashOfConfig":"8"},{"size":594,"mtime":1616676852321,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1616427868981,"results":"10","hashOfConfig":"8"},{"size":2782,"mtime":1616783512568,"results":"11","hashOfConfig":"8"},{"size":4197,"mtime":1616783512578,"results":"12","hashOfConfig":"8"},{"size":1677,"mtime":1616783512567,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12schdz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robin/Desktop/cinepick-movie-selector/src/index.js",[],["28","29"],"/Users/robin/Desktop/cinepick-movie-selector/src/App.js",[],"/Users/robin/Desktop/cinepick-movie-selector/src/reportWebVitals.js",[],"/Users/robin/Desktop/cinepick-movie-selector/src/pages/home.js",["30","31"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport image from \"./img/cine.png\";\nimport gang from \"./img/GS.png\"\n\n\n\nconst api_key = \"435c8880fa41fdbe5fba133c47f78d2b\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst getImage = (path) => `https://image.tmdb.org/t/p/w300/${path}`;\n\n\n\nfunction HomePage() {\n  const [movies, setMovies] = useState({});\n  const [filter, setFilter] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (filter === \"\"){\n      axios.get(`${BASE_URL}/movie/upcoming`, { params: { api_key, page }  })\n      .then((res) => {\n        setMovies(res.data);\n      });\n    } else {\n      axios.get(`${BASE_URL}/search/movie`, { params: { api_key, query : filter }  })\n      .then((res) => {\n        setMovies(res.data);\n      });\n    }\n  }, [filter, page]);\n\n\n  // useEffect(() => {\n  //   const filteredMovies = movies.filter((movie) => {\n  //     return movie.title.toLowerCase().includes(filter.toLowerCase());\n      \n  //   });\n    \n  //   setPrintedMovies(filteredMovies)\n  // }, [movies, filter]);\n\n\n  return (\n    <body>\n      <header className=\"App-header\">\n      <img src ={image} style={{width : \"560px\"}} alt=\"PosterImage\" className=\"logo\"/>\n        <nav>\n          <ul className=\"list\">\n            <li className=\"items\">Accueil</li>\n            <li className=\"items\">Catalogue</li>\n            <li className=\"items\">Nouveautés</li>\n            <li className=\"item_Espace\">Mon Espace</li>\n          </ul>\n          <button className=\"btn\">BTN</button>\n        </nav>\n      </header>\n      <input  className =\"searchBar\" value = {filter} placeholder =\"Rechercher votre film\" key=\"inputMovie\" onChange= { (e) => { setFilter(e.target.value)} } />\n      <img src></img>\n      {movies.results &&\n        <div className =\"grid\">\n          {movies.results.map(({ title, poster_path, id , release_date}) => (\n            <div className=\"item\" key = {id}>\n                \n                <Link to={ `/movie/${id}` }>\n                    <img style = {{borderRadius : \"20px\"}}className=\"posterPicture\" src={ getImage(poster_path) } alt =\"PosterImage\"/>\n                </Link>\n                <p style={{color: \"#FFFFFF\"}}>{ title }</p>\n              {release_date}\n            </div>\n          ))}\n        </div>\n      }\n      \n      { filter === \"\" && \n        <div className=\"slider\">\n          {page > 1 && <button onClick={()=> {setPage(page - 1)}}>Précédent</button>}\n          <span>{movies.page}</span>\n            {page < movies.total_pages && <button className=\"btn2\" onClick={()=> {setPage(page + 1)}}>Suivant</button>}\n        </div>\n      }\n      <div className='wavemoving'>\n      </div>\n    </body>\n  );\n}\n\nexport default HomePage;","/Users/robin/Desktop/cinepick-movie-selector/src/pages/movie.js",[],"/Users/robin/Desktop/cinepick-movie-selector/src/components/Footer.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":12},{"ruleId":"40","severity":1,"message":"41","line":60,"column":7,"nodeType":"42","endLine":60,"endColumn":16},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'gang' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]