{"ast":null,"code":"var _jsxFileName = \"/Users/robin/Desktop/cinepick-movie-selector/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport image from \"./img/cine.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"435c8880fa41fdbe5fba133c47f78d2b\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nconst getImage = path => `https://image.tmdb.org/t/p/w300/${path}`;\n\nfunction HomePage() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [printedMovies, setPrintedMovies] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  useEffect(() => {\n    const api = axios.create({\n      baseURL: BASE_URL\n    });\n    api.get(\"/movie/upcoming\", {\n      params: {\n        api_key,\n        page: 2\n      }\n    }).then(res => {\n      setMovies(res.data.results);\n    });\n  }, []);\n  useEffect(() => {\n    const filteredMovies = movies.filter(movie => {\n      return movie.title.toLowerCase().includes(filter.toLowerCase());\n    });\n    setPrintedMovies(filteredMovies);\n  }, [filter]);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        style: {\n          width: \"560px\"\n        },\n        alt: \"PosterImage\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"SearchBar\",\n      value: filter,\n      placeholder: \"Search your movie\",\n      onChange: e => {\n        setFilter(e.target.value);\n      }\n    }, \"inputMovie\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: printedMovies.map(({\n        title,\n        poster_path,\n        id,\n        release_date\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#FFFFFF\"\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              borderRadius: \"20px\"\n            },\n            classname: \"posterPicture\",\n            src: getImage(poster_path),\n            alt: \"PosterImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"EsXZDqKWvkOVZi4Ap65YgPWixsg=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/robin/Desktop/cinepick-movie-selector/src/pages/home.js"],"names":["React","useEffect","useState","axios","Link","image","api_key","BASE_URL","getImage","path","HomePage","movies","setMovies","printedMovies","setPrintedMovies","filter","setFilter","api","create","baseURL","get","params","page","then","res","data","results","filteredMovies","movie","title","toLowerCase","includes","width","e","target","value","map","poster_path","id","release_date","color","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport image from \"./img/cine.png\";\n\n\nconst api_key = \"435c8880fa41fdbe5fba133c47f78d2b\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst getImage = (path) => `https://image.tmdb.org/t/p/w300/${path}`;\n\n\n\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [printedMovies, setPrintedMovies] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n\n  useEffect(() => {\n    const api = axios.create({ baseURL: BASE_URL });\n    api.get(\"/movie/upcoming\", { params: { api_key, page:2 }  })\n    .then((res) => {\n      setMovies(res.data.results);\n    });\n  }, []);\n  \n  \n  useEffect(() => {\n    const filteredMovies = movies.filter((movie) => {\n      return movie.title.toLowerCase().includes(filter.toLowerCase());\n      \n    });\n    \n    setPrintedMovies(filteredMovies)\n  }, [filter]);\n\n\n  return (\n    <body>\n      <header className=\"App-header\">\n        <img src ={image} style={{width : \"560px\"}} alt=\"PosterImage\" className=\"logo\"/>\n      </header>\n      <input  className =\"SearchBar\" value = {filter} placeholder =\"Search your movie\" key=\"inputMovie\" onChange= { (e) => { setFilter(e.target.value)} } />\n      <div className =\"grid\">\n        {printedMovies.map(({ title, poster_path, id , release_date}) => (\n          <div className=\"item\">\n              <p style={{color: \"#FFFFFF\"}}>{ title }</p>\n              <Link to={ `/movie/${id}` }>\n                  <img style = {{borderRadius : \"20px\"}}classname=\"posterPicture\" src={ getImage(poster_path) } alt =\"PosterImage\"/>\n              </Link>\n            {release_date}\n          </div>\n        ))}\n      </div>\n      \n    </body>\n  );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}