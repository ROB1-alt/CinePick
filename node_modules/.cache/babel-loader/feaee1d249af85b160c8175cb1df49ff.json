{"ast":null,"code":"var _jsxFileName = \"/Users/robin/Desktop/cinepick-movie-selector/src/pages/movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"435c8880fa41fdbe5fba133c47f78d2b\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nconst getImage = path => `https://image.tmdb.org/t/p/w300/${path}`; // const getVideo = (path) => `https://www.youtube.com/watch?v=${path}`;\n\n\nfunction MoviePage() {\n  _s();\n\n  const params = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n  const [dataloaded, setdataLoaded] = useState(false); // const [similarMovie, setSimilarMovie] = useState([0]);\n\n  useEffect(() => {\n    const api = axios.create({\n      baseURL: BASE_URL\n    });\n    api.get(`/movie/${params.id}`, {\n      params: {\n        api_key\n      }\n    }).then(res => {\n      console.log(res.data);\n      setMovieInfo(res.data);\n      setdataLoaded(true); // setSimilarMovie(res.data);\n    }); // api.get(`/movie/${params.id}/similar`, { params: { api_key }})\n    // .then((res) => {\n    //   setSimilarMovie(res.data);\n    // });\n    // eslint-disable-next-line\n  }, []);\n\n  if (!dataloaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"bodymovie\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"MainTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flextitle\",\n              children: movieInfo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divbox\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"maindiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"second div\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getImage(movieInfo.poster_path),\n                  alt: \"Poster\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"third-div\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"divNumber\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Date de sortie : \", movieInfo.release_date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Dur\\xE9e du film : \", movieInfo.runtime, \" minutes \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: movieInfo.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 23\n                  }, this), movieInfo.genres.map(genre => /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"genres\",\n                    children: [\" \", genre.name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 25\n                  }, this)), movieInfo.production_countries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"genres\",\n                    children: [\" \", country.iso_3166_1, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this)), movieInfo.production_companies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"genres\",\n                      children: [\" \", company.name, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"genres\",\n                      children: [\" \", company.origin_country, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"divsynopsis\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Synopsis\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this), movieInfo.overview, movieInfo.homepage, movieInfo.vote_average]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviePage, \"2cTvmYSKePBpiqQSxjw07PR4R24=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["/Users/robin/Desktop/cinepick-movie-selector/src/pages/movie.js"],"names":["React","useEffect","useState","axios","useParams","api_key","BASE_URL","getImage","path","MoviePage","params","movieInfo","setMovieInfo","dataloaded","setdataLoaded","api","create","baseURL","get","id","then","res","console","log","data","title","poster_path","release_date","runtime","status","genres","map","genre","name","production_countries","country","iso_3166_1","production_companies","company","origin_country","overview","homepage","vote_average"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\n\nconst api_key = \"435c8880fa41fdbe5fba133c47f78d2b\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst getImage = (path) => `https://image.tmdb.org/t/p/w300/${path}`;\n// const getVideo = (path) => `https://www.youtube.com/watch?v=${path}`;\n\nfunction MoviePage() {\n  const params = useParams()\n  const [movieInfo, setMovieInfo] = useState({});\n  const [dataloaded, setdataLoaded] = useState(false);\n  // const [similarMovie, setSimilarMovie] = useState([0]);\n\n\n\n\n  useEffect(() =>{\n    const api = axios.create({ baseURL: BASE_URL });\n    api.get(`/movie/${params.id}`, { params: { api_key } })\n    .then((res) => {\n      console.log(res.data)\n      setMovieInfo(res.data)\n      setdataLoaded(true);\n      // setSimilarMovie(res.data);\n    });\n    // api.get(`/movie/${params.id}/similar`, { params: { api_key }})\n    // .then((res) => {\n    //   setSimilarMovie(res.data);\n    // });\n    // eslint-disable-next-line\n  }, []);\n  if (!dataloaded) {\n    return <div>Loading...</div>\n  } \n  return (\n    <body className=\"bodymovie\">\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className =\"container\">\n              {/* <img  className =\"backGround\" src = {getImage(movieInfo.backdrop_path)} alt = \"Background\" /> */}\n              <div className = \"MainTitle\">\n                <div className=\"flextitle\">\n                  {movieInfo.title}\n                </div>\n              </div>\n              <div className=\"divbox\">\n                <div className=\"maindiv\">\n                  <div className=\"second div\">\n                    <img src = { getImage(movieInfo.poster_path) } alt =\"Poster\"/>\n                    </div>\n                  <div className=\"third-div\">\n                    <div className=\"divNumber\">\n                      <p>Date de sortie : {movieInfo.release_date}</p>\n                      <p>Durée du film : {movieInfo.runtime} minutes </p>\n                      <p>{movieInfo.status}</p>\n                      {movieInfo.genres.map((genre) =>\n                        <p className='genres'> {genre.name} </p>\n                      )}\n                      {movieInfo.production_countries.map((country) =>\n                        <p className='genres'> {country.iso_3166_1} </p>\n                      )}\n                      {movieInfo.production_companies.map((company) =>\n                        <div>\n                        <p className='genres'> {company.name} </p>\n                        <p className='genres'> {company.origin_country} </p>  \n                        </div>\n                        )}\n                    </div>\n                    <div className=\"divsynopsis\">\n                        <h3>Synopsis</h3>\n                        {movieInfo.overview}\n                        {movieInfo.homepage}\n                        {movieInfo.vote_average}\n                        \n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </header>\n        </div>\n    </body>\n  );\n}\n\nexport default MoviePage;"]},"metadata":{},"sourceType":"module"}